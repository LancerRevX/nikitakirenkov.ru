# Generated by Django 5.1.2 on 2024-10-26 11:48

from django.db import migrations
from django.conf import settings

from ..models import Task

BOOKS = [
    {"text": "ГПиМРМ", "status": Task.Status.FINISHED, "children": []},
    {
        "text": "Ведьмак",
        "status": Task.Status.ACTIVE,
        "children": [
            {
                "text": "Последнее желание. Меч предназначения",
                "status": Task.Status.FINISHED,
            },
            {
                "text": "Кровь эльфов. Час презрения",
                "status": Task.Status.IN_PROGRESS,
            },
            {"text": "Владычица озера", "status": Task.Status.ACTIVE},
            {
                "text": "Крещение огнём. Башня ласточки",
                "status": Task.Status.ACTIVE,
            },
            {
                "text": "Сезон гроз. Дорога без возврата",
                "status": Task.Status.ACTIVE,
            },
        ],
    },
    {"text": "1984", "status": Task.Status.ACTIVE, "children": []},
]


PURCHASES = [
    {"text": "Колодки", "status": Task.Status.FAILED},
    {"text": "Кофеварка", "status": Task.Status.CANCELLED},
    {"text": "Чайник", "status": Task.Status.FINISHED},
    {"text": "Кошелёк", "status": Task.Status.QUESTIONED},
    {"text": "Новый ПК", "status": Task.Status.IN_PROGRESS},
    {"text": "Топливный фильтр", "status": Task.Status.FINISHED},
    {"text": "Кастрюля", "status": Task.Status.ACTIVE},
]


def insert_tasks(apps, schema_editor):
    User = apps.get_model(settings.AUTH_USER_MODEL)
    user = User.objects.get(username='nikita')
    books = user.tasks.create(text='Книги', position=0)
    for book_i, book_data in enumerate(BOOKS):
        book = books.children.create(
            text=book_data["text"], status=book_data["status"], position=book_i
        )
        for child_i, child in enumerate(book_data["children"]):
            books.children.create(**child, parent=book, position=child_i)

    purchases = user.tasks.create(text="Покупки", position=1)
    for purchase_i, purchase_data in enumerate(PURCHASES):
        purchases.children.create(**purchase_data, position=purchase_i)


def delete_tasks(apps, schema_editor):
    Task = apps.get_model("tasks", "Task")
    Task.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("tasks", "0001_initial"),
    ]

    operations = [migrations.RunPython(insert_tasks, delete_tasks)]
